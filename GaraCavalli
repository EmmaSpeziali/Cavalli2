
class GaraDiCavalli {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Input della lunghezza della gara
        System.out.print("Inserisci la lunghezza della gara (in metri): ");
        int lunghezzaGara = scanner.nextInt();
        
        // Input del numero di cavalli
        System.out.print("Inserisci il numero di cavalli partecipanti: ");
        int numCavalli = scanner.nextInt();
        scanner.nextLine(); // Consuma il newline
        
        List<Cavallo> cavalli = new ArrayList<>();
        
        // Creazione dei cavalli
        for (int i = 0; i < numCavalli; i++) {
            System.out.print("Inserisci il nome del cavallo " + (i + 1) + ": ");
            String nome = scanner.nextLine();
            System.out.print("Inserisci la velocità del cavallo (metri al secondo): ");
            int velocita = scanner.nextInt();
            scanner.nextLine(); // Consuma il newline
            cavalli.add(new Cavallo(nome, velocita, lunghezzaGara));
        }
        
        System.out.println("La gara inizia!");
        
        // Avvia i thread dei cavalli
        for (Cavallo cavallo : cavalli) {
            cavallo.start();
        }

        // Attende il termine di tutti i cavalli
        for (Cavallo cavallo : cavalli) {
            try {
                cavallo.join();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        
        System.out.println("La gara è finita!");
        
        // Ordinamento per classifica
        cavalli.sort((c1, c2) -> Integer.compare(c2.getDistanzaPercorsa(), c1.getDistanzaPercorsa()));
        
        // Mostra i primi 3 cavalli
        System.out.println("Classifica finale:");
        for (int i = 0; i < Math.min(3, cavalli.size()); i++) {
            Cavallo cavallo = cavalli.get(i);
            System.out.println((i + 1) + ". " + cavallo.getNome() + " - " + cavallo.getDistanzaPercorsa() + " metri");
        }

        // Salvataggio dei risultati su file
        System.out.print("Inserisci il nome del file in cui salvare i risultati: ");
        String fileName = scanner.nextLine();
        
        try (FileWriter writer = new FileWriter(fileName, true)) { // Append mode
            writer.write("Classifica della gara:\n");
            for (int i = 0; i < Math.min(3, cavalli.size()); i++) {
                Cavallo cavallo = cavalli.get(i);
                writer.write((i + 1) + ". " + cavallo.getNome() + " - " + cavallo.getDistanzaPercorsa() + " metri\n");
            }
            writer.write("--------------\n");
            System.out.println("Classifica salvata su " + fileName);
        } catch (IOException e) {
            System.out.println("Errore durante il salvataggio del file: " + e.getMessage());
        }

        scanner.close();
    }
} 